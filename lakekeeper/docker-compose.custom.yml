version: '3'

services:
  lakekeeper:
    image: ${LAKEKEEPER__SERVER_IMAGE:-quay.io/lakekeeper/catalog:latest-main}
    container_name: lakekeeper
    pull_policy: always
    environment:
      - LAKEKEEPER__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://postgres:postgres@db:5432/postgres
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@db:5432/postgres
      - LAKEKEEPER__AUTHZ_BACKEND=allowall
      - LAKEKEEPER__DEFAULT_WAREHOUSE=mage-warehouse
      # MinIO config with lakekeeper
      - LAKEKEEPER__AWS_ACCESS_KEY_ID=minioadmin
      - LAKEKEEPER__AWS_SECRET_ACCESS_KEY=minioadmin
      - LAKEKEEPER__AWS_REGION=ap-southeast-2
      - LAKEKEEPER__AWS_DEFAULT_REGION=ap-southeast-2
      - LAKEKEEPER__WAREHOUSE_DIR=s3://mage-demo
      - LAKEKEEPER__S3_ENDPOINT=http://minio:9000
      - LAKEKEEPER__S3_PATH_STYLE_ACCESS=true
      # MinIO config
      - AWS_ACCESS_KEY_ID=minioadmin
      - AWS_SECRET_ACCESS_KEY=minioadmin
      - AWS_REGION=ap-southeast-2
      - AWS_DEFAULT_REGION=ap-southeast-2
      - LAKEKEEPER_WAREHOUSE_DIR=s3://mage-demo
      - LAKEKEEPER_S3_ENDPOINT=http://minio:9000
      - LAKEKEEPER_S3_PATH_STYLE_ACCESS=true
    command: [ "serve" ]
    healthcheck:
      test: [ "CMD", "/home/nonroot/iceberg-catalog", "healthcheck" ]
      interval: 1s
      timeout: 10s
      retries: 3
      start_period: 3s
    depends_on:
      migrate:
        condition: service_completed_successfully
      db:
        condition: service_healthy
    ports:
      - "8181:8181"
    networks:
      - iceberg_net
      - local-pipeline-network

  migrate:
    image: ${LAKEKEEPER__SERVER_IMAGE:-quay.io/lakekeeper/catalog:latest-main}
    pull_policy: always
    environment:
      - LAKEKEEPER__PG_ENCRYPTION_KEY=This-is-NOT-Secure!
      - LAKEKEEPER__PG_DATABASE_URL_READ=postgresql://postgres:postgres@db:5432/postgres
      - LAKEKEEPER__PG_DATABASE_URL_WRITE=postgresql://postgres:postgres@db:5432/postgres
      - LAKEKEEPER__AUTHZ_BACKEND=allowall
      - LAKEKEEPER__LOG_LEVEL = debug
    restart: "no"
    command: [ "migrate" ]
    depends_on:
      db:
        condition: service_healthy
    networks:
      - iceberg_net
      - local-pipeline-network
  
  db:
    image: bitnami/postgresql:16.6.0
    container_name: lakekeeper-db
    environment:
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=postgres
      - POSTGRESQL_DATABASE=postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -p 5432 -d postgres" ]
      interval: 2s
      timeout: 10s
      retries: 2
      start_period: 10s
    volumes:
      - volume-lakekeeper:/bitnami/postgresql
    networks:
      - iceberg_net
      - local-pipeline-network

networks:
  iceberg_net:
    name: iceberg_net
  local-pipeline-network:
    external: true

volumes:
  volume-lakekeeper: